<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Json Box: JsonBox::OutputFilter&lt; Inserter &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Json Box
   &#160;<span id="projectnumber">0.4.3</span>
   </div>
   <div id="projectbrief">This is a JSON C++ library. It can write and read JSON files with ease and speed.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_json_box.htm">JsonBox</a></li><li class="navelem"><a class="el" href="class_json_box_1_1_output_filter.htm">OutputFilter</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="class_json_box_1_1_output_filter-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">JsonBox::OutputFilter&lt; Inserter &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_output_filter_8h_source.htm">OutputFilter.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab8982ccca2114224fe6e94607ee25d1a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_output_filter.htm#ab8982ccca2114224fe6e94607ee25d1a">OutputFilter</a> (std::streambuf *newDestination, Inserter newInserter, bool newDeleteWhenFinished=false)</td></tr>
<tr class="memitem:a4eca03e86af609b36435d40a5061e649"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_output_filter.htm#a4eca03e86af609b36435d40a5061e649">OutputFilter</a> (std::streambuf *newDestination, bool newDeleteWhenFinished=false)</td></tr>
<tr class="memitem:a238a562b649a7815a9a8358fbe4072ae"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_output_filter.htm#a238a562b649a7815a9a8358fbe4072ae">~OutputFilter</a> ()</td></tr>
<tr class="memitem:a8d91227ea71cb143e36928eaf6dcdd8d"><td class="memItemLeft" align="right" valign="top">virtual int_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_output_filter.htm#a8d91227ea71cb143e36928eaf6dcdd8d">overflow</a> (int_type ch)</td></tr>
<tr class="memitem:a6bd41425d7efae42b14da6cf78a7f77f"><td class="memItemLeft" align="right" valign="top">virtual int_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_output_filter.htm#a6bd41425d7efae42b14da6cf78a7f77f">underflow</a> ()</td></tr>
<tr class="memitem:a8d5ee977a741dbb12b0aeee01e3365da"><td class="memItemLeft" align="right" valign="top">virtual int_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_output_filter.htm#a8d5ee977a741dbb12b0aeee01e3365da">sync</a> ()</td></tr>
<tr class="memitem:acf62e1ad6f33da3f9ef522f8fbdaf5ff"><td class="memItemLeft" align="right" valign="top">virtual std::streambuf *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_output_filter.htm#acf62e1ad6f33da3f9ef522f8fbdaf5ff">setbuf</a> (char *p, int len)</td></tr>
<tr class="memitem:af708be1bcc3cec48b2e7aa510a3203f1"><td class="memItemLeft" align="right" valign="top">Inserter &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_output_filter.htm#af708be1bcc3cec48b2e7aa510a3203f1">getInserter</a> ()</td></tr>
<tr class="memitem:a97e6302e519dca892dfa171dff928bfc"><td class="memItemLeft" align="right" valign="top">std::streambuf *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_output_filter.htm#a97e6302e519dca892dfa171dff928bfc">getDestination</a> () const </td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:acec70d4a9bc0227fb686d493812d65a2"><td class="memItemLeft" align="right" valign="top">std::streambuf *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_output_filter.htm#acec70d4a9bc0227fb686d493812d65a2">destination</a></td></tr>
<tr class="memdesc:acec70d4a9bc0227fb686d493812d65a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pointer to the destination streambuf.  <a href="#acec70d4a9bc0227fb686d493812d65a2"></a><br/></td></tr>
<tr class="memitem:a054fdeb7ea28f014fc792b4b1a49ff7a"><td class="memItemLeft" align="right" valign="top">Inserter&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_output_filter.htm#a054fdeb7ea28f014fc792b4b1a49ff7a">inserter</a></td></tr>
<tr class="memitem:a2ecaaba596decb74cab33d5c55a71609"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_output_filter.htm#a2ecaaba596decb74cab33d5c55a71609">deleteWhenFinished</a></td></tr>
</table>
<a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename Inserter&gt;<br/>
class JsonBox::OutputFilter&lt; Inserter &gt;</h3>

<p>Templated class used to filter output in an std::ostream. The custom mechanic of the filtering is easily implemented in the given Inserter. An output filter can be used to add indentation to an std::ostream, it can be used to log an std::ostream, etc. </p>
<dl class="tparams"><dt>Template Parameters</dt><dd>
  <table class="tparams">
    <tr><td class="paramname">Inserter</td><td>Type used as the inserter for the output filter. </td></tr>
  </table>
  </dd>
</dl>
</div><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="ab8982ccca2114224fe6e94607ee25d1a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Inserter &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_output_filter.htm">JsonBox::OutputFilter</a>&lt; Inserter &gt;::<a class="el" href="class_json_box_1_1_output_filter.htm">OutputFilter</a> </td>
          <td>(</td>
          <td class="paramtype">std::streambuf *&#160;</td>
          <td class="paramname"><em>newDestination</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Inserter&#160;</td>
          <td class="paramname"><em>newInserter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>newDeleteWhenFinished</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Parameterized constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">newDestination</td><td>Pointer to the streambuf destination. </td></tr>
    <tr><td class="paramname">newInserter</td><td>Inserter to use to filter the output. </td></tr>
    <tr><td class="paramname">newDeleteWhenFinished</td><td>Used to know if the instance will have to delete its destination streambuf or not. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a4eca03e86af609b36435d40a5061e649"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Inserter &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_output_filter.htm">JsonBox::OutputFilter</a>&lt; Inserter &gt;::<a class="el" href="class_json_box_1_1_output_filter.htm">OutputFilter</a> </td>
          <td>(</td>
          <td class="paramtype">std::streambuf *&#160;</td>
          <td class="paramname"><em>newDestination</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>newDeleteWhenFinished</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Parameterized constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">newDestination</td><td>Pointer to the streambuf destination. </td></tr>
    <tr><td class="paramname">newInserter</td><td>Inserter to use to filter the output. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a238a562b649a7815a9a8358fbe4072ae"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Inserter &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="class_json_box_1_1_output_filter.htm">JsonBox::OutputFilter</a>&lt; Inserter &gt;::~<a class="el" href="class_json_box_1_1_output_filter.htm">OutputFilter</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Destructor. Takes care of deleting the destination streambuf if necessary. </p>

</div>
</div>
<h2>Member Function Documentation</h2>
<a class="anchor" id="a97e6302e519dca892dfa171dff928bfc"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Inserter &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::streambuf* <a class="el" href="class_json_box_1_1_output_filter.htm">JsonBox::OutputFilter</a>&lt; Inserter &gt;::getDestination </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Gets the destination streambuf. </p>
<dl class="section return"><dt>Returns</dt><dd>Pointer to the destination streambuf. </dd></dl>

</div>
</div>
<a class="anchor" id="af708be1bcc3cec48b2e7aa510a3203f1"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Inserter &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Inserter&amp; <a class="el" href="class_json_box_1_1_output_filter.htm">JsonBox::OutputFilter</a>&lt; Inserter &gt;::getInserter </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Gets the inserter's instance. </p>
<dl class="section return"><dt>Returns</dt><dd>Reference to the inserter. </dd></dl>

</div>
</div>
<a class="anchor" id="a8d91227ea71cb143e36928eaf6dcdd8d"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Inserter &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int_type <a class="el" href="class_json_box_1_1_output_filter.htm">JsonBox::OutputFilter</a>&lt; Inserter &gt;::overflow </td>
          <td>(</td>
          <td class="paramtype">int_type&#160;</td>
          <td class="paramname"><em>ch</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Actual function that calls the inserter to filter the output. </p>
<dl class="section return"><dt>Returns</dt><dd>Unspecified value not equal to traits::eof() on success, traits::eof() on failure. </dd></dl>

</div>
</div>
<a class="anchor" id="acf62e1ad6f33da3f9ef522f8fbdaf5ff"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Inserter &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual std::streambuf* <a class="el" href="class_json_box_1_1_output_filter.htm">JsonBox::OutputFilter</a>&lt; Inserter &gt;::setbuf </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>p</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>We don't need to do anything here. Calls the base class version. </p>
<dl class="section return"><dt>Returns</dt><dd>Pointer to itself. </dd></dl>

</div>
</div>
<a class="anchor" id="a8d5ee977a741dbb12b0aeee01e3365da"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Inserter &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int_type <a class="el" href="class_json_box_1_1_output_filter.htm">JsonBox::OutputFilter</a>&lt; Inserter &gt;::sync </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>We don't need to do anything here. Calls the base class version. </p>
<dl class="section return"><dt>Returns</dt><dd>0 on success, -1 otherwise. The base class version returns 0. </dd></dl>

</div>
</div>
<a class="anchor" id="a6bd41425d7efae42b14da6cf78a7f77f"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Inserter &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual int_type <a class="el" href="class_json_box_1_1_output_filter.htm">JsonBox::OutputFilter</a>&lt; Inserter &gt;::underflow </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Since it's an output filter, we don't need to do anything here. </p>

</div>
</div>
<h2>Member Data Documentation</h2>
<a class="anchor" id="a2ecaaba596decb74cab33d5c55a71609"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Inserter &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="class_json_box_1_1_output_filter.htm">JsonBox::OutputFilter</a>&lt; Inserter &gt;::deleteWhenFinished</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Bool used to know if the filter must delete its destination filter or not. </p>
<dl class="section see"><dt>See Also</dt><dd>JsonBox::Filter&lt;Inserter&gt;::destination </dd></dl>

</div>
</div>
<a class="anchor" id="acec70d4a9bc0227fb686d493812d65a2"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Inserter &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::streambuf* <a class="el" href="class_json_box_1_1_output_filter.htm">JsonBox::OutputFilter</a>&lt; Inserter &gt;::destination</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Pointer to the destination streambuf. </p>

</div>
</div>
<a class="anchor" id="a054fdeb7ea28f014fc792b4b1a49ff7a"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Inserter &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">Inserter <a class="el" href="class_json_box_1_1_output_filter.htm">JsonBox::OutputFilter</a>&lt; Inserter &gt;::inserter</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Inserter to use to insert new characters in the destination streambuf. </p>
<dl class="section see"><dt>See Also</dt><dd>JsonBox::Filter&lt;Inserter&gt;::destination </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>include/JsonBox/<a class="el" href="_output_filter_8h_source.htm">OutputFilter.h</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Aug 4 2012 10:49:29 for Json Box by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.1.2
</small></address>
</body>
</html>
