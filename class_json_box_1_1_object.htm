<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>Json Box: JsonBox::Object Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Json Box
   &#160;<span id="projectnumber">0.4.3</span>
   </div>
   <div id="projectbrief">This is a JSON C++ library. It can write and read JSON files with ease and speed.</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.1.2 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
      <li><a href="files.htm"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.htm"><span>Class&#160;List</span></a></li>
      <li><a href="classes.htm"><span>Class&#160;Index</span></a></li>
      <li><a href="functions.htm"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(10)"><span class="SelectionMark">&#160;</span>Macros</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(11)"><span class="SelectionMark">&#160;</span>Pages</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="namespace_json_box.htm">JsonBox</a></li><li class="navelem"><a class="el" href="class_json_box_1_1_object.htm">Object</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="class_json_box_1_1_object-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">JsonBox::Object Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="_object_8h_source.htm">Object.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aadf8e44ece33131b4dc66e754861ef6f"><td class="memItemLeft" align="right" valign="top">typedef std::map&lt; std::string, <br class="typebreak"/>
<a class="el" href="class_json_box_1_1_value.htm">Value</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#aadf8e44ece33131b4dc66e754861ef6f">container</a></td></tr>
<tr class="memitem:a6059e945d01f81527dccfef0c86e2f91"><td class="memItemLeft" align="right" valign="top">typedef container::key_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a></td></tr>
<tr class="memitem:a797d470c48c6b0281709552bd2f9c0ab"><td class="memItemLeft" align="right" valign="top">typedef container::mapped_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a797d470c48c6b0281709552bd2f9c0ab">mapped_type</a></td></tr>
<tr class="memitem:aa0f5cdac313f9e63c965a1a291fa8164"><td class="memItemLeft" align="right" valign="top">typedef container::value_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#aa0f5cdac313f9e63c965a1a291fa8164">value_type</a></td></tr>
<tr class="memitem:a36fe38b4af40f3a0c4db734de46ab881"><td class="memItemLeft" align="right" valign="top">typedef container::size_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a36fe38b4af40f3a0c4db734de46ab881">size_type</a></td></tr>
<tr class="memitem:ac7639dbcd746783c3f591afec84ce5f8"><td class="memItemLeft" align="right" valign="top">typedef container::difference_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#ac7639dbcd746783c3f591afec84ce5f8">difference_type</a></td></tr>
<tr class="memitem:a61664a7f7076b0d03ac2dd132242cdf5"><td class="memItemLeft" align="right" valign="top">typedef container::key_compare&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a61664a7f7076b0d03ac2dd132242cdf5">key_compare</a></td></tr>
<tr class="memitem:a716b7bdad7264a8fe6ebbcc2f6472491"><td class="memItemLeft" align="right" valign="top">typedef container::allocator_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a716b7bdad7264a8fe6ebbcc2f6472491">allocator_type</a></td></tr>
<tr class="memitem:a3a345b2cb61d47c4ff95d023285004d7"><td class="memItemLeft" align="right" valign="top">typedef container::reference&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a3a345b2cb61d47c4ff95d023285004d7">reference</a></td></tr>
<tr class="memitem:aaf4d7917fd2d7ac1f5541c77bd6ac9b3"><td class="memItemLeft" align="right" valign="top">typedef container::const_reference&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#aaf4d7917fd2d7ac1f5541c77bd6ac9b3">const_reference</a></td></tr>
<tr class="memitem:a1a6edfd0989da0b09b711e051a34e6b3"><td class="memItemLeft" align="right" valign="top">typedef container::pointer&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a1a6edfd0989da0b09b711e051a34e6b3">pointer</a></td></tr>
<tr class="memitem:a2effd337c3d0407c3d0949744f2c5545"><td class="memItemLeft" align="right" valign="top">typedef container::const_pointer&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a2effd337c3d0407c3d0949744f2c5545">const_pointer</a></td></tr>
<tr class="memitem:a890f6abe2e10996f95c0741fd5922109"><td class="memItemLeft" align="right" valign="top">typedef container::iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">iterator</a></td></tr>
<tr class="memitem:a4d23817b5d11f016245351ccd4a5d7e2"><td class="memItemLeft" align="right" valign="top">typedef container::const_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a4d23817b5d11f016245351ccd4a5d7e2">const_iterator</a></td></tr>
<tr class="memitem:a0af500e05499df07492b7a05cb08e324"><td class="memItemLeft" align="right" valign="top">typedef container::reverse_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a0af500e05499df07492b7a05cb08e324">reverse_iterator</a></td></tr>
<tr class="memitem:aa2817625fc0517506fa48b1d83ec4560"><td class="memItemLeft" align="right" valign="top">typedef <br class="typebreak"/>
container::const_reverse_iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#aa2817625fc0517506fa48b1d83ec4560">const_reverse_iterator</a></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:acebaab9000e9741ec0c7a81f8afb8111"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#acebaab9000e9741ec0c7a81f8afb8111">Object</a> (const <a class="el" href="class_json_box_1_1_object.htm#a61664a7f7076b0d03ac2dd132242cdf5">key_compare</a> &amp;comp=<a class="el" href="class_json_box_1_1_object.htm#a61664a7f7076b0d03ac2dd132242cdf5">key_compare</a>(), const <a class="el" href="class_json_box_1_1_object.htm#a716b7bdad7264a8fe6ebbcc2f6472491">allocator_type</a> &amp;alloc=<a class="el" href="class_json_box_1_1_object.htm#a716b7bdad7264a8fe6ebbcc2f6472491">allocator_type</a>())</td></tr>
<tr class="memitem:ae2e0c692da57e0305397710dbd5342a2"><td class="memTemplParams" colspan="2">template&lt;typename InputIterator &gt; </td></tr>
<tr class="memitem:ae2e0c692da57e0305397710dbd5342a2"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#ae2e0c692da57e0305397710dbd5342a2">Object</a> (InputIterator first, InputIterator last, const <a class="el" href="class_json_box_1_1_object.htm#a61664a7f7076b0d03ac2dd132242cdf5">key_compare</a> &amp;comp=<a class="el" href="class_json_box_1_1_object.htm#a61664a7f7076b0d03ac2dd132242cdf5">key_compare</a>(), const <a class="el" href="class_json_box_1_1_object.htm#a716b7bdad7264a8fe6ebbcc2f6472491">allocator_type</a> &amp;alloc=<a class="el" href="class_json_box_1_1_object.htm#a716b7bdad7264a8fe6ebbcc2f6472491">allocator_type</a>())</td></tr>
<tr class="memitem:a5c5202f05d891da48bc2904792a31543"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a5c5202f05d891da48bc2904792a31543">Object</a> (const <a class="el" href="class_json_box_1_1_object.htm">Object</a> &amp;other)</td></tr>
<tr class="memitem:a4f831baf30e58d2b1b82a32faad52555"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm">Object</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a4f831baf30e58d2b1b82a32faad52555">operator=</a> (const <a class="el" href="class_json_box_1_1_object.htm">Object</a> &amp;other)</td></tr>
<tr class="memitem:a20982f8f0dc715c9fa7b97bb248f5976"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a20982f8f0dc715c9fa7b97bb248f5976">operator==</a> (const <a class="el" href="class_json_box_1_1_object.htm">Object</a> &amp;rhs) const </td></tr>
<tr class="memitem:ae7159f44ff7959e9b6af6a5bc8445cef"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#ae7159f44ff7959e9b6af6a5bc8445cef">operator!=</a> (const <a class="el" href="class_json_box_1_1_object.htm">Object</a> &amp;rhs) const </td></tr>
<tr class="memitem:aeccde63bf2e80dd952e3cc87b2de9a92"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#aeccde63bf2e80dd952e3cc87b2de9a92">operator&lt;</a> (const <a class="el" href="class_json_box_1_1_object.htm">Object</a> &amp;rhs) const </td></tr>
<tr class="memitem:a2ece3790e9d6e28a63569ecf2ac22ecc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a2ece3790e9d6e28a63569ecf2ac22ecc">operator&lt;=</a> (const <a class="el" href="class_json_box_1_1_object.htm">Object</a> &amp;rhs) const </td></tr>
<tr class="memitem:a7dfec61637b4744887cd9dc61cf25e5c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a7dfec61637b4744887cd9dc61cf25e5c">operator&gt;</a> (const <a class="el" href="class_json_box_1_1_object.htm">Object</a> &amp;rhs) const </td></tr>
<tr class="memitem:a1bcdf5852eb332ffda8a17ddf478ed4f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a1bcdf5852eb332ffda8a17ddf478ed4f">operator&gt;=</a> (const <a class="el" href="class_json_box_1_1_object.htm">Object</a> &amp;rhs) const </td></tr>
<tr class="memitem:ae0f786e652a7307d7cc3a338ad434fdd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#a716b7bdad7264a8fe6ebbcc2f6472491">allocator_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#ae0f786e652a7307d7cc3a338ad434fdd">get_allocator</a> () const </td></tr>
<tr class="memitem:a9a5b39788cbb0293a22b8afc9f31bb63"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#a797d470c48c6b0281709552bd2f9c0ab">mapped_type</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a9a5b39788cbb0293a22b8afc9f31bb63">operator[]</a> (const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;key)</td></tr>
<tr class="memitem:af33e16a207cfdf9a71a5fd29678f58d1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#af33e16a207cfdf9a71a5fd29678f58d1">begin</a> ()</td></tr>
<tr class="memitem:a85adf723bd4517f1c7e060ac718ccd36"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#a4d23817b5d11f016245351ccd4a5d7e2">const_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a85adf723bd4517f1c7e060ac718ccd36">begin</a> () const </td></tr>
<tr class="memitem:a07427bf3ba1cdac2d7e194a5e6245fea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a07427bf3ba1cdac2d7e194a5e6245fea">end</a> ()</td></tr>
<tr class="memitem:af18bb1ede4336139eb84a174f3d55ec8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#a4d23817b5d11f016245351ccd4a5d7e2">const_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#af18bb1ede4336139eb84a174f3d55ec8">end</a> () const </td></tr>
<tr class="memitem:a37e7dafaa72c9b6d2fc6b60ff9df41af"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#a0af500e05499df07492b7a05cb08e324">reverse_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a37e7dafaa72c9b6d2fc6b60ff9df41af">rbegin</a> ()</td></tr>
<tr class="memitem:a3c1b43ae1c728535894f77fd535aa805"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#aa2817625fc0517506fa48b1d83ec4560">const_reverse_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a3c1b43ae1c728535894f77fd535aa805">rbegin</a> () const </td></tr>
<tr class="memitem:a51c4f911f9c9b6360157daef70309c5c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#a0af500e05499df07492b7a05cb08e324">reverse_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a51c4f911f9c9b6360157daef70309c5c">rend</a> ()</td></tr>
<tr class="memitem:a3a3ca57f6f8415744adba645acd84f5a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#aa2817625fc0517506fa48b1d83ec4560">const_reverse_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a3a3ca57f6f8415744adba645acd84f5a">rend</a> () const </td></tr>
<tr class="memitem:a65e0cb3d2dbb9224231c14a294f9a9cb"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a65e0cb3d2dbb9224231c14a294f9a9cb">empty</a> () const </td></tr>
<tr class="memitem:a8569c8caaa95ed31fbb33847df179a2b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#a36fe38b4af40f3a0c4db734de46ab881">size_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a8569c8caaa95ed31fbb33847df179a2b">size</a> () const </td></tr>
<tr class="memitem:ad7c76487d697d06875353ca2b0de9709"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#a36fe38b4af40f3a0c4db734de46ab881">size_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#ad7c76487d697d06875353ca2b0de9709">max_size</a> () const </td></tr>
<tr class="memitem:a2dddadbdb15d8558f1654dd306c7169a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a2dddadbdb15d8558f1654dd306c7169a">clear</a> ()</td></tr>
<tr class="memitem:a4c726822e25f07349bea3dc3318c470b"><td class="memItemLeft" align="right" valign="top">std::pair&lt; <a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">iterator</a>, bool &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a4c726822e25f07349bea3dc3318c470b">insert</a> (<a class="el" href="class_json_box_1_1_object.htm#aaf4d7917fd2d7ac1f5541c77bd6ac9b3">const_reference</a> value)</td></tr>
<tr class="memitem:a5dd24e3b34691ee6aa0a778c2f37365c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a5dd24e3b34691ee6aa0a778c2f37365c">insert</a> (<a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">iterator</a> hint, <a class="el" href="class_json_box_1_1_object.htm#aaf4d7917fd2d7ac1f5541c77bd6ac9b3">const_reference</a> value)</td></tr>
<tr class="memitem:a7a3ab92f33ed4153afdbcce83421cf13"><td class="memTemplParams" colspan="2">template&lt;typename InputIterator &gt; </td></tr>
<tr class="memitem:a7a3ab92f33ed4153afdbcce83421cf13"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a7a3ab92f33ed4153afdbcce83421cf13">insert</a> (InputIterator first, InputIterator last)</td></tr>
<tr class="memitem:a62cf76140e5c6a6986cbb7b40d1bf7ae"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a62cf76140e5c6a6986cbb7b40d1bf7ae">erase</a> (<a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">iterator</a> position)</td></tr>
<tr class="memitem:a778858018edb7f097204646d3aaa8e99"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a778858018edb7f097204646d3aaa8e99">erase</a> (<a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">iterator</a> first, <a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">iterator</a> last)</td></tr>
<tr class="memitem:a8e7e36cbd649059ee42c707c37158c66"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#a36fe38b4af40f3a0c4db734de46ab881">size_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a8e7e36cbd649059ee42c707c37158c66">erase</a> (const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;key)</td></tr>
<tr class="memitem:a8787af0458df52afea1013e5b01fb1bf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a8787af0458df52afea1013e5b01fb1bf">swap</a> (<a class="el" href="class_json_box_1_1_object.htm">Object</a> &amp;other)</td></tr>
<tr class="memitem:abf199a4f94eaa1c072bd69329e9b37c7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#a36fe38b4af40f3a0c4db734de46ab881">size_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#abf199a4f94eaa1c072bd69329e9b37c7">count</a> (const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;key) const </td></tr>
<tr class="memitem:a47e93589b3ddd4e1358b875e20785eac"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a47e93589b3ddd4e1358b875e20785eac">find</a> (const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;key)</td></tr>
<tr class="memitem:a8fbf2417629f7de818ece40d03bcbb00"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#a4d23817b5d11f016245351ccd4a5d7e2">const_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a8fbf2417629f7de818ece40d03bcbb00">find</a> (const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;key) const </td></tr>
<tr class="memitem:af79e08e5cd5bd0f1c40c6b8c054142c8"><td class="memItemLeft" align="right" valign="top">std::pair&lt; <a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">iterator</a>, <a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">iterator</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#af79e08e5cd5bd0f1c40c6b8c054142c8">equal_range</a> (const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;key)</td></tr>
<tr class="memitem:a4ae8c8dd1f4bf98332ad01e0eb787965"><td class="memItemLeft" align="right" valign="top">std::pair&lt; <a class="el" href="class_json_box_1_1_object.htm#a4d23817b5d11f016245351ccd4a5d7e2">const_iterator</a>, <br class="typebreak"/>
<a class="el" href="class_json_box_1_1_object.htm#a4d23817b5d11f016245351ccd4a5d7e2">const_iterator</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a4ae8c8dd1f4bf98332ad01e0eb787965">equal_range</a> (const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;key) const </td></tr>
<tr class="memitem:a7c0d3b1585057ef2391527dd40c3e1bf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a7c0d3b1585057ef2391527dd40c3e1bf">lower_bound</a> (const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;key)</td></tr>
<tr class="memitem:a8511e2769c1e328e285b0151a309ca80"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#a4d23817b5d11f016245351ccd4a5d7e2">const_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a8511e2769c1e328e285b0151a309ca80">lower_bound</a> (const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;key) const </td></tr>
<tr class="memitem:acb76b33fe6f95017a1525974c659b4d9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#acb76b33fe6f95017a1525974c659b4d9">upper_bound</a> (const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;key)</td></tr>
<tr class="memitem:a3494714d43c8437a1a1ba58bb9b575f8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#a4d23817b5d11f016245351ccd4a5d7e2">const_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a3494714d43c8437a1a1ba58bb9b575f8">upper_bound</a> (const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;key) const </td></tr>
<tr class="memitem:aaa992fc141869228a6514556b89304a0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#a61664a7f7076b0d03ac2dd132242cdf5">key_compare</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#aaa992fc141869228a6514556b89304a0">key_comp</a> () const </td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a4604f99db1f3a2f8f78974eb1e08457d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="class_json_box_1_1_object.htm#aadf8e44ece33131b4dc66e754861ef6f">container</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="class_json_box_1_1_object.htm#a4604f99db1f3a2f8f78974eb1e08457d">data</a></td></tr>
</table>
<a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>Represents a JSON object. It's a map with added methods. So the JSON object type can be used the same way as a standard STL map of string and <a class="el" href="class_json_box_1_1_value.htm">Value</a>, but can be more easily output in a stream. </p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="class_json_box_1_1_value.htm">JsonBox::Value</a> </dd></dl>
</div><h2>Member Typedef Documentation</h2>
<a class="anchor" id="a716b7bdad7264a8fe6ebbcc2f6472491"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef container::allocator_type <a class="el" href="class_json_box_1_1_object.htm#a716b7bdad7264a8fe6ebbcc2f6472491">JsonBox::Object::allocator_type</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a4d23817b5d11f016245351ccd4a5d7e2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef container::const_iterator <a class="el" href="class_json_box_1_1_object.htm#a4d23817b5d11f016245351ccd4a5d7e2">JsonBox::Object::const_iterator</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a2effd337c3d0407c3d0949744f2c5545"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef container::const_pointer <a class="el" href="class_json_box_1_1_object.htm#a2effd337c3d0407c3d0949744f2c5545">JsonBox::Object::const_pointer</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aaf4d7917fd2d7ac1f5541c77bd6ac9b3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef container::const_reference <a class="el" href="class_json_box_1_1_object.htm#aaf4d7917fd2d7ac1f5541c77bd6ac9b3">JsonBox::Object::const_reference</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aa2817625fc0517506fa48b1d83ec4560"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef container::const_reverse_iterator <a class="el" href="class_json_box_1_1_object.htm#aa2817625fc0517506fa48b1d83ec4560">JsonBox::Object::const_reverse_iterator</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aadf8e44ece33131b4dc66e754861ef6f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef std::map&lt;std::string, <a class="el" href="class_json_box_1_1_value.htm">Value</a>&gt; <a class="el" href="class_json_box_1_1_object.htm#aadf8e44ece33131b4dc66e754861ef6f">JsonBox::Object::container</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ac7639dbcd746783c3f591afec84ce5f8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef container::difference_type <a class="el" href="class_json_box_1_1_object.htm#ac7639dbcd746783c3f591afec84ce5f8">JsonBox::Object::difference_type</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a890f6abe2e10996f95c0741fd5922109"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef container::iterator <a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">JsonBox::Object::iterator</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a61664a7f7076b0d03ac2dd132242cdf5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef container::key_compare <a class="el" href="class_json_box_1_1_object.htm#a61664a7f7076b0d03ac2dd132242cdf5">JsonBox::Object::key_compare</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a6059e945d01f81527dccfef0c86e2f91"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef container::key_type <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">JsonBox::Object::key_type</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a797d470c48c6b0281709552bd2f9c0ab"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef container::mapped_type <a class="el" href="class_json_box_1_1_object.htm#a797d470c48c6b0281709552bd2f9c0ab">JsonBox::Object::mapped_type</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a1a6edfd0989da0b09b711e051a34e6b3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef container::pointer <a class="el" href="class_json_box_1_1_object.htm#a1a6edfd0989da0b09b711e051a34e6b3">JsonBox::Object::pointer</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a3a345b2cb61d47c4ff95d023285004d7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef container::reference <a class="el" href="class_json_box_1_1_object.htm#a3a345b2cb61d47c4ff95d023285004d7">JsonBox::Object::reference</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a0af500e05499df07492b7a05cb08e324"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef container::reverse_iterator <a class="el" href="class_json_box_1_1_object.htm#a0af500e05499df07492b7a05cb08e324">JsonBox::Object::reverse_iterator</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a36fe38b4af40f3a0c4db734de46ab881"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef container::size_type <a class="el" href="class_json_box_1_1_object.htm#a36fe38b4af40f3a0c4db734de46ab881">JsonBox::Object::size_type</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aa0f5cdac313f9e63c965a1a291fa8164"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef container::value_type <a class="el" href="class_json_box_1_1_object.htm#aa0f5cdac313f9e63c965a1a291fa8164">JsonBox::Object::value_type</a></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="acebaab9000e9741ec0c7a81f8afb8111"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">JsonBox::Object::Object </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm#a61664a7f7076b0d03ac2dd132242cdf5">key_compare</a> &amp;&#160;</td>
          <td class="paramname"><em>comp</em> = <code><a class="el" href="class_json_box_1_1_object.htm#a61664a7f7076b0d03ac2dd132242cdf5">key_compare</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm#a716b7bdad7264a8fe6ebbcc2f6472491">allocator_type</a> &amp;&#160;</td>
          <td class="paramname"><em>alloc</em> = <code><a class="el" href="class_json_box_1_1_object.htm#a716b7bdad7264a8fe6ebbcc2f6472491">allocator_type</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ae2e0c692da57e0305397710dbd5342a2"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename InputIterator &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">JsonBox::Object::Object </td>
          <td>(</td>
          <td class="paramtype">InputIterator&#160;</td>
          <td class="paramname"><em>first</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">InputIterator&#160;</td>
          <td class="paramname"><em>last</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm#a61664a7f7076b0d03ac2dd132242cdf5">key_compare</a> &amp;&#160;</td>
          <td class="paramname"><em>comp</em> = <code><a class="el" href="class_json_box_1_1_object.htm#a61664a7f7076b0d03ac2dd132242cdf5">key_compare</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm#a716b7bdad7264a8fe6ebbcc2f6472491">allocator_type</a> &amp;&#160;</td>
          <td class="paramname"><em>alloc</em> = <code><a class="el" href="class_json_box_1_1_object.htm#a716b7bdad7264a8fe6ebbcc2f6472491">allocator_type</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a5c5202f05d891da48bc2904792a31543"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">JsonBox::Object::Object </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm">Object</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2>Member Function Documentation</h2>
<a class="anchor" id="af33e16a207cfdf9a71a5fd29678f58d1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">Object::iterator</a> JsonBox::Object::begin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a85adf723bd4517f1c7e060ac718ccd36"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#a4d23817b5d11f016245351ccd4a5d7e2">Object::const_iterator</a> JsonBox::Object::begin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a2dddadbdb15d8558f1654dd306c7169a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void JsonBox::Object::clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="abf199a4f94eaa1c072bd69329e9b37c7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#a36fe38b4af40f3a0c4db734de46ab881">Object::size_type</a> JsonBox::Object::count </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a65e0cb3d2dbb9224231c14a294f9a9cb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool JsonBox::Object::empty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a07427bf3ba1cdac2d7e194a5e6245fea"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">Object::iterator</a> JsonBox::Object::end </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="af18bb1ede4336139eb84a174f3d55ec8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#a4d23817b5d11f016245351ccd4a5d7e2">Object::const_iterator</a> JsonBox::Object::end </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="af79e08e5cd5bd0f1c40c6b8c054142c8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::pair&lt; <a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">Object::iterator</a>, <a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">Object::iterator</a> &gt; JsonBox::Object::equal_range </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a4ae8c8dd1f4bf98332ad01e0eb787965"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::pair&lt; <a class="el" href="class_json_box_1_1_object.htm#a4d23817b5d11f016245351ccd4a5d7e2">Object::const_iterator</a>, <a class="el" href="class_json_box_1_1_object.htm#a4d23817b5d11f016245351ccd4a5d7e2">Object::const_iterator</a> &gt; JsonBox::Object::equal_range </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a62cf76140e5c6a6986cbb7b40d1bf7ae"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void JsonBox::Object::erase </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">iterator</a>&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a778858018edb7f097204646d3aaa8e99"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void JsonBox::Object::erase </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">iterator</a>&#160;</td>
          <td class="paramname"><em>first</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">iterator</a>&#160;</td>
          <td class="paramname"><em>last</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a8e7e36cbd649059ee42c707c37158c66"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#a36fe38b4af40f3a0c4db734de46ab881">Object::size_type</a> JsonBox::Object::erase </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a47e93589b3ddd4e1358b875e20785eac"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">Object::iterator</a> JsonBox::Object::find </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a8fbf2417629f7de818ece40d03bcbb00"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#a4d23817b5d11f016245351ccd4a5d7e2">Object::const_iterator</a> JsonBox::Object::find </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ae0f786e652a7307d7cc3a338ad434fdd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#a716b7bdad7264a8fe6ebbcc2f6472491">Object::allocator_type</a> JsonBox::Object::get_allocator </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a4c726822e25f07349bea3dc3318c470b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::pair&lt; <a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">Object::iterator</a>, bool &gt; JsonBox::Object::insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_json_box_1_1_object.htm#aaf4d7917fd2d7ac1f5541c77bd6ac9b3">const_reference</a>&#160;</td>
          <td class="paramname"><em>value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a5dd24e3b34691ee6aa0a778c2f37365c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">Object::iterator</a> JsonBox::Object::insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">iterator</a>&#160;</td>
          <td class="paramname"><em>hint</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="class_json_box_1_1_object.htm#aaf4d7917fd2d7ac1f5541c77bd6ac9b3">const_reference</a>&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a7a3ab92f33ed4153afdbcce83421cf13"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename InputIterator &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void JsonBox::Object::insert </td>
          <td>(</td>
          <td class="paramtype">InputIterator&#160;</td>
          <td class="paramname"><em>first</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">InputIterator&#160;</td>
          <td class="paramname"><em>last</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aaa992fc141869228a6514556b89304a0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#a61664a7f7076b0d03ac2dd132242cdf5">Object::key_compare</a> JsonBox::Object::key_comp </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a7c0d3b1585057ef2391527dd40c3e1bf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">Object::iterator</a> JsonBox::Object::lower_bound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a8511e2769c1e328e285b0151a309ca80"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#a4d23817b5d11f016245351ccd4a5d7e2">Object::const_iterator</a> JsonBox::Object::lower_bound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ad7c76487d697d06875353ca2b0de9709"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#a36fe38b4af40f3a0c4db734de46ab881">Object::size_type</a> JsonBox::Object::max_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="ae7159f44ff7959e9b6af6a5bc8445cef"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool JsonBox::Object::operator!= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm">Object</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="aeccde63bf2e80dd952e3cc87b2de9a92"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool JsonBox::Object::operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm">Object</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a2ece3790e9d6e28a63569ecf2ac22ecc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool JsonBox::Object::operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm">Object</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a4f831baf30e58d2b1b82a32faad52555"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm">Object</a> &amp; JsonBox::Object::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm">Object</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a20982f8f0dc715c9fa7b97bb248f5976"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool JsonBox::Object::operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm">Object</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a7dfec61637b4744887cd9dc61cf25e5c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool JsonBox::Object::operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm">Object</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a1bcdf5852eb332ffda8a17ddf478ed4f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool JsonBox::Object::operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm">Object</a> &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a9a5b39788cbb0293a22b8afc9f31bb63"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#a797d470c48c6b0281709552bd2f9c0ab">Object::mapped_type</a> &amp; JsonBox::Object::operator[] </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a37e7dafaa72c9b6d2fc6b60ff9df41af"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#a0af500e05499df07492b7a05cb08e324">Object::reverse_iterator</a> JsonBox::Object::rbegin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a3c1b43ae1c728535894f77fd535aa805"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#aa2817625fc0517506fa48b1d83ec4560">Object::const_reverse_iterator</a> JsonBox::Object::rbegin </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a51c4f911f9c9b6360157daef70309c5c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#a0af500e05499df07492b7a05cb08e324">Object::reverse_iterator</a> JsonBox::Object::rend </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a3a3ca57f6f8415744adba645acd84f5a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#aa2817625fc0517506fa48b1d83ec4560">Object::const_reverse_iterator</a> JsonBox::Object::rend </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a8569c8caaa95ed31fbb33847df179a2b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#a36fe38b4af40f3a0c4db734de46ab881">Object::size_type</a> JsonBox::Object::size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a8787af0458df52afea1013e5b01fb1bf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void JsonBox::Object::swap </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="class_json_box_1_1_object.htm">Object</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="acb76b33fe6f95017a1525974c659b4d9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#a890f6abe2e10996f95c0741fd5922109">Object::iterator</a> JsonBox::Object::upper_bound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a class="anchor" id="a3494714d43c8437a1a1ba58bb9b575f8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#a4d23817b5d11f016245351ccd4a5d7e2">Object::const_iterator</a> JsonBox::Object::upper_bound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="class_json_box_1_1_object.htm#a6059e945d01f81527dccfef0c86e2f91">key_type</a> &amp;&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<h2>Member Data Documentation</h2>
<a class="anchor" id="a4604f99db1f3a2f8f78974eb1e08457d"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="class_json_box_1_1_object.htm#aadf8e44ece33131b4dc66e754861ef6f">container</a> JsonBox::Object::data</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>include/JsonBox/<a class="el" href="_object_8h_source.htm">Object.h</a></li>
<li>src/<a class="el" href="_object_8cpp.htm">Object.cpp</a></li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Sat Aug 4 2012 10:49:29 for Json Box by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.1.2
</small></address>
</body>
</html>
